// Generated by https://github.com/juliettef/IconFontCppHeaders script GenerateIconFontCppHeaders.py for languages C and C++
// from https://raw.githubusercontent.com/microsoft/vscode-codicons/main/dist/codicon.css
// for use with https://github.com/microsoft/vscode-codicons/blob/main/dist/codicon.ttf
#pragma once

#include <string>

namespace DearTs {
namespace Core {
namespace Resource {

// 字体文件名
const std::string FONT_ICON_FILE_NAME_VS = "codicon.ttf";

// 图标范围
const unsigned int ICON_MIN_VS = 0xea60;
const unsigned int ICON_MAX_16_VS = 0xec25;
const unsigned int ICON_MAX_VS = 0xec25;

// 图标常量 (带中文注释)
const std::string ICON_VS_ADD = "\xee\xa9\xa0";                // U+ea60 添加
const std::string ICON_VS_PLUS = "\xee\xa9\xa0";               // U+ea60 加号
const std::string ICON_VS_GIST_NEW = "\xee\xa9\xa0";           // U+ea60 新建Gist
const std::string ICON_VS_REPO_CREATE = "\xee\xa9\xa0";        // U+ea60 创建仓库
const std::string ICON_VS_LIGHTBULB = "\xee\xa9\xa1";          // U+ea61 灯泡(提示)
const std::string ICON_VS_LIGHT_BULB = "\xee\xa9\xa1";         // U+ea61 灯泡
const std::string ICON_VS_REPO = "\xee\xa9\xa2";               // U+ea62 仓库
const std::string ICON_VS_REPO_DELETE = "\xee\xa9\xa2";        // U+ea62 删除仓库
const std::string ICON_VS_GIST_FORK = "\xee\xa9\xa3";          // U+ea63 Fork Gist
const std::string ICON_VS_REPO_FORKED = "\xee\xa9\xa3";        // U+ea63 Fork仓库
const std::string ICON_VS_GIT_PULL_REQUEST = "\xee\xa9\xa4";   // U+ea64 Pull Request
const std::string ICON_VS_GIT_PULL_REQUEST_ABANDONED = "\xee\xa9\xa4"; // U+ea64 放弃的Pull Request
const std::string ICON_VS_RECORD_KEYS = "\xee\xa9\xa5";        // U+ea65 记录按键
const std::string ICON_VS_KEYBOARD = "\xee\xa9\xa5";           // U+ea65 键盘
const std::string ICON_VS_TAG = "\xee\xa9\xa6";                // U+ea66 标签
const std::string ICON_VS_GIT_PULL_REQUEST_LABEL = "\xee\xa9\xa6"; // U+ea66 PR标签
const std::string ICON_VS_TAG_ADD = "\xee\xa9\xa6";            // U+ea66 添加标签
const std::string ICON_VS_TAG_REMOVE = "\xee\xa9\xa6";         // U+ea66 移除标签
const std::string ICON_VS_PERSON = "\xee\xa9\xa7";             // U+ea67 人员
const std::string ICON_VS_PERSON_FOLLOW = "\xee\xa9\xa7";      // U+ea67 关注人员
const std::string ICON_VS_PERSON_OUTLINE = "\xee\xa9\xa7";     // U+ea67 人员轮廓
const std::string ICON_VS_PERSON_FILLED = "\xee\xa9\xa7";      // U+ea67 填充人员
const std::string ICON_VS_GIT_BRANCH = "\xee\xa9\xa8";         // U+ea68 Git分支
const std::string ICON_VS_GIT_BRANCH_CREATE = "\xee\xa9\xa8";  // U+ea68 创建分支
const std::string ICON_VS_GIT_BRANCH_DELETE = "\xee\xa9\xa8";  // U+ea68 删除分支
const std::string ICON_VS_SOURCE_CONTROL = "\xee\xa9\xa8";     // U+ea68 源码控制
const std::string ICON_VS_MIRROR = "\xee\xa9\xa9";             // U+ea69 镜像
const std::string ICON_VS_MIRROR_PUBLIC = "\xee\xa9\xa9";      // U+ea69 公开镜像
const std::string ICON_VS_STAR = "\xee\xa9\xaa";               // U+ea6a 星标
const std::string ICON_VS_STAR_ADD = "\xee\xa9\xaa";           // U+ea6a 添加星标
const std::string ICON_VS_STAR_DELETE = "\xee\xa9\xaa";        // U+ea6a 删除星标
const std::string ICON_VS_STAR_EMPTY = "\xee\xa9\xaa";         // U+ea6a 空星标
const std::string ICON_VS_COMMENT = "\xee\xa9\xab";            // U+ea6b 评论
const std::string ICON_VS_COMMENT_ADD = "\xee\xa9\xab";        // U+ea6b 添加评论
const std::string ICON_VS_ALERT = "\xee\xa9\xac";              // U+ea6c 警告
const std::string ICON_VS_WARNING = "\xee\xa9\xac";            // U+ea6c 警告
const std::string ICON_VS_SEARCH = "\xee\xa9\xad";             // U+ea6d 搜索
const std::string ICON_VS_SEARCH_SAVE = "\xee\xa9\xad";        // U+ea6d 保存搜索
const std::string ICON_VS_LOG_OUT = "\xee\xa9\xae";            // U+ea6e 登出
const std::string ICON_VS_SIGN_OUT = "\xee\xa9\xae";           // U+ea6e 登出
const std::string ICON_VS_LOG_IN = "\xee\xa9\xaf";             // U+ea6f 登录
const std::string ICON_VS_SIGN_IN = "\xee\xa9\xaf";            // U+ea6f 登录
const std::string ICON_VS_EYE = "\xee\xa9\xb0";                // U+ea70 眼睛(查看)
const std::string ICON_VS_EYE_UNWATCH = "\xee\xa9\xb0";        // U+ea70 取消关注
const std::string ICON_VS_EYE_WATCH = "\xee\xa9\xb0";          // U+ea70 关注
const std::string ICON_VS_CIRCLE_FILLED = "\xee\xa9\xb1";      // U+ea71 填充圆
const std::string ICON_VS_PRIMITIVE_DOT = "\xee\xa9\xb1";      // U+ea71 点
const std::string ICON_VS_CLOSE_DIRTY = "\xee\xa9\xb1";        // U+ea71 关闭(脏)
const std::string ICON_VS_DEBUG_BREAKPOINT = "\xee\xa9\xb1";   // U+ea71 调试断点
const std::string ICON_VS_DEBUG_BREAKPOINT_DISABLED = "\xee\xa9\xb1"; // U+ea71 禁用断点
const std::string ICON_VS_DEBUG_HINT = "\xee\xa9\xb1";         // U+ea71 调试提示
const std::string ICON_VS_TERMINAL_DECORATION_SUCCESS = "\xee\xa9\xb1"; // U+ea71 终端装饰(成功)
const std::string ICON_VS_PRIMITIVE_SQUARE = "\xee\xa9\xb2";   // U+ea72 方块
const std::string ICON_VS_EDIT = "\xee\xa9\xb3";               // U+ea73 编辑
const std::string ICON_VS_PENCIL = "\xee\xa9\xb3";             // U+ea73 铅笔
const std::string ICON_VS_INFO = "\xee\xa9\xb4";               // U+ea74 信息
const std::string ICON_VS_ISSUE_OPENED = "\xee\xa9\xb4";       // U+ea74 打开的问题
const std::string ICON_VS_GIST_PRIVATE = "\xee\xa9\xb5";       // U+ea75 私有Gist
const std::string ICON_VS_GIT_FORK_PRIVATE = "\xee\xa9\xb5";   // U+ea75 私有Fork
const std::string ICON_VS_LOCK = "\xee\xa9\xb5";               // U+ea75 锁
const std::string ICON_VS_MIRROR_PRIVATE = "\xee\xa9\xb5";     // U+ea75 私有镜像
const std::string ICON_VS_CLOSE = "\xee\xa9\xb6";              // U+ea76 关闭
const std::string ICON_VS_REMOVE_CLOSE = "\xee\xa9\xb6";       // U+ea76 移除关闭
const std::string ICON_VS_X = "\xee\xa9\xb6";                  // U+ea76 X
const std::string ICON_VS_REPO_SYNC = "\xee\xa9\xb7";          // U+ea77 同步仓库
const std::string ICON_VS_SYNC = "\xee\xa9\xb7";               // U+ea77 同步
const std::string ICON_VS_CLONE = "\xee\xa9\xb8";              // U+ea78 克隆
const std::string ICON_VS_DESKTOP_DOWNLOAD = "\xee\xa9\xb8";   // U+ea78 桌面下载
const std::string ICON_VS_BEAKER = "\xee\xa9\xb9";             // U+ea79 烧杯
const std::string ICON_VS_MICROSCOPE = "\xee\xa9\xb9";         // U+ea79 显微镜
const std::string ICON_VS_VM = "\xee\xa9\xba";                 // U+ea7a 虚拟机
const std::string ICON_VS_DEVICE_DESKTOP = "\xee\xa9\xba";     // U+ea7a 桌面设备
const std::string ICON_VS_FILE = "\xee\xa9\xbb";               // U+ea7b 文件
const std::string ICON_VS_FILE_TEXT = "\xee\xa9\xbb";          // U+ea7b 文本文件
const std::string ICON_VS_MORE = "\xee\xa9\xbc";               // U+ea7c 更多
const std::string ICON_VS_ELLIPSIS = "\xee\xa9\xbc";           // U+ea7c 省略号
const std::string ICON_VS_KEBAB_HORIZONTAL = "\xee\xa9\xbc";   // U+ea7c 水平菜单
const std::string ICON_VS_MAIL_REPLY = "\xee\xa9\xbd";         // U+ea7d 邮件回复
const std::string ICON_VS_REPLY = "\xee\xa9\xbd";              // U+ea7d 回复
const std::string ICON_VS_ORGANIZATION = "\xee\xa9\xbe";       // U+ea7e 组织
const std::string ICON_VS_ORGANIZATION_FILLED = "\xee\xa9\xbe"; // U+ea7e 填充组织
const std::string ICON_VS_ORGANIZATION_OUTLINE = "\xee\xa9\xbe"; // U+ea7e 组织轮廓
const std::string ICON_VS_NEW_FILE = "\xee\xa9\xbf";           // U+ea7f 新建文件
const std::string ICON_VS_FILE_ADD = "\xee\xa9\xbf";           // U+ea7f 添加文件
const std::string ICON_VS_NEW_FOLDER = "\xee\xaa\x80";         // U+ea80 新建文件夹
const std::string ICON_VS_FILE_DIRECTORY_CREATE = "\xee\xaa\x80"; // U+ea80 创建目录
const std::string ICON_VS_TRASH = "\xee\xaa\x81";              // U+ea81 垃圾桶
const std::string ICON_VS_TRASHCAN = "\xee\xaa\x81";           // U+ea81 垃圾箱
const std::string ICON_VS_HISTORY = "\xee\xaa\x82";            // U+ea82 历史
const std::string ICON_VS_CLOCK = "\xee\xaa\x82";              // U+ea82 时钟
const std::string ICON_VS_FOLDER = "\xee\xaa\x83";             // U+ea83 文件夹
const std::string ICON_VS_FILE_DIRECTORY = "\xee\xaa\x83";     // U+ea83 目录
const std::string ICON_VS_SYMBOL_FOLDER = "\xee\xaa\x83";      // U+ea83 符号文件夹
const std::string ICON_VS_LOGO_GITHUB = "\xee\xaa\x84";        // U+ea84 GitHub标志
const std::string ICON_VS_MARK_GITHUB = "\xee\xaa\x84";        // U+ea84 GitHub标记
const std::string ICON_VS_GITHUB = "\xee\xaa\x84";             // U+ea84 GitHub
const std::string ICON_VS_TERMINAL = "\xee\xaa\x85";           // U+ea85 终端
const std::string ICON_VS_CONSOLE = "\xee\xaa\x85";            // U+ea85 控制台
const std::string ICON_VS_REPL = "\xee\xaa\x85";               // U+ea85 REPL
const std::string ICON_VS_ZAP = "\xee\xaa\x86";                // U+ea86 闪电(快速)
const std::string ICON_VS_SYMBOL_EVENT = "\xee\xaa\x86";       // U+ea86 事件符号
const std::string ICON_VS_ERROR = "\xee\xaa\x87";              // U+ea87 错误
const std::string ICON_VS_STOP = "\xee\xaa\x87";               // U+ea87 停止
const std::string ICON_VS_VARIABLE = "\xee\xaa\x88";           // U+ea88 变量
const std::string ICON_VS_SYMBOL_VARIABLE = "\xee\xaa\x88";    // U+ea88 变量符号
const std::string ICON_VS_ARRAY = "\xee\xaa\x8a";              // U+ea8a 数组
const std::string ICON_VS_SYMBOL_ARRAY = "\xee\xaa\x8a";       // U+ea8a 数组符号
const std::string ICON_VS_SYMBOL_MODULE = "\xee\xaa\x8b";      // U+ea8b 模块符号
const std::string ICON_VS_SYMBOL_PACKAGE = "\xee\xaa\x8b";     // U+ea8b 包符号
const std::string ICON_VS_SYMBOL_NAMESPACE = "\xee\xaa\x8b";   // U+ea8b 命名空间符号
const std::string ICON_VS_SYMBOL_OBJECT = "\xee\xaa\x8b";      // U+ea8b 对象符号
const std::string ICON_VS_SYMBOL_METHOD = "\xee\xaa\x8c";      // U+ea8c 方法符号
const std::string ICON_VS_SYMBOL_FUNCTION = "\xee\xaa\x8c";    // U+ea8c 函数符号
const std::string ICON_VS_SYMBOL_CONSTRUCTOR = "\xee\xaa\x8c"; // U+ea8c 构造函数符号
const std::string ICON_VS_SYMBOL_BOOLEAN = "\xee\xaa\x8f";     // U+ea8f 布尔符号
const std::string ICON_VS_SYMBOL_NULL = "\xee\xaa\x8f";        // U+ea8f 空值符号
const std::string ICON_VS_SYMBOL_NUMERIC = "\xee\xaa\x90";     // U+ea90 数字符号
const std::string ICON_VS_SYMBOL_NUMBER = "\xee\xaa\x90";      // U+ea90 数字符号
const std::string ICON_VS_SYMBOL_STRUCTURE = "\xee\xaa\x91";   // U+ea91 结构符号
const std::string ICON_VS_SYMBOL_STRUCT = "\xee\xaa\x91";      // U+ea91 结构体符号
const std::string ICON_VS_SYMBOL_PARAMETER = "\xee\xaa\x92";   // U+ea92 参数符号
const std::string ICON_VS_SYMBOL_TYPE_PARAMETER = "\xee\xaa\x92"; // U+ea92 类型参数符号
const std::string ICON_VS_SYMBOL_KEY = "\xee\xaa\x93";         // U+ea93 键符号
const std::string ICON_VS_SYMBOL_TEXT = "\xee\xaa\x93";        // U+ea93 文本符号
const std::string ICON_VS_SYMBOL_REFERENCE = "\xee\xaa\x94";   // U+ea94 引用符号
const std::string ICON_VS_GO_TO_FILE = "\xee\xaa\x94";         // U+ea94 跳转到文件
const std::string ICON_VS_SYMBOL_ENUM = "\xee\xaa\x95";        // U+ea95 枚举符号
const std::string ICON_VS_SYMBOL_VALUE = "\xee\xaa\x95";       // U+ea95 值符号
const std::string ICON_VS_SYMBOL_RULER = "\xee\xaa\x96";       // U+ea96 尺子符号
const std::string ICON_VS_SYMBOL_UNIT = "\xee\xaa\x96";        // U+ea96 单位符号
const std::string ICON_VS_ACTIVATE_BREAKPOINTS = "\xee\xaa\x97"; // U+ea97 激活断点
const std::string ICON_VS_ARCHIVE = "\xee\xaa\x98";            // U+ea98 归档
const std::string ICON_VS_ARROW_BOTH = "\xee\xaa\x99";         // U+ea99 双向箭头
const std::string ICON_VS_ARROW_DOWN = "\xee\xaa\x9a";         // U+ea9a 向下箭头
const std::string ICON_VS_ARROW_LEFT = "\xee\xaa\x9b";         // U+ea9b 向左箭头
const std::string ICON_VS_ARROW_RIGHT = "\xee\xaa\x9c";        // U+ea9c 向右箭头
const std::string ICON_VS_ARROW_SMALL_DOWN = "\xee\xaa\x9d";   // U+ea9d 小向下箭头
const std::string ICON_VS_ARROW_SMALL_LEFT = "\xee\xaa\x9e";   // U+ea9e 小向左箭头
const std::string ICON_VS_ARROW_SMALL_RIGHT = "\xee\xaa\x9f";  // U+ea9f 小向右箭头
const std::string ICON_VS_ARROW_SMALL_UP = "\xee\xaa\xa0";     // U+eaa0 小向上箭头
const std::string ICON_VS_ARROW_UP = "\xee\xaa\xa1";           // U+eaa1 向上箭头
const std::string ICON_VS_BELL = "\xee\xaa\xa2";               // U+eaa2 铃铛
const std::string ICON_VS_BOLD = "\xee\xaa\xa3";               // U+eaa3 粗体
const std::string ICON_VS_BOOK = "\xee\xaa\xa4";               // U+eaa4 书籍
const std::string ICON_VS_BOOKMARK = "\xee\xaa\xa5";           // U+eaa5 书签
const std::string ICON_VS_DEBUG_BREAKPOINT_CONDITIONAL_UNVERIFIED = "\xee\xaa\xa6"; // U+eaa6 未验证条件断点
const std::string ICON_VS_DEBUG_BREAKPOINT_CONDITIONAL = "\xee\xaa\xa7"; // U+eaa7 条件断点
const std::string ICON_VS_DEBUG_BREAKPOINT_CONDITIONAL_DISABLED = "\xee\xaa\xa7"; // U+eaa7 禁用条件断点
const std::string ICON_VS_DEBUG_BREAKPOINT_DATA_UNVERIFIED = "\xee\xaa\xa8"; // U+eaa8 未验证数据断点
const std::string ICON_VS_DEBUG_BREAKPOINT_DATA = "\xee\xaa\xa9"; // U+eaa9 数据断点
const std::string ICON_VS_DEBUG_BREAKPOINT_DATA_DISABLED = "\xee\xaa\xa9"; // U+eaa9 禁用数据断点
const std::string ICON_VS_DEBUG_BREAKPOINT_LOG_UNVERIFIED = "\xee\xaa\xaa"; // U+eaaa 未验证日志断点
const std::string ICON_VS_DEBUG_BREAKPOINT_LOG = "\xee\xaa\xab"; // U+eaab 日志断点
const std::string ICON_VS_DEBUG_BREAKPOINT_LOG_DISABLED = "\xee\xaa\xab"; // U+eaab 禁用日志断点
const std::string ICON_VS_BRIEFCASE = "\xee\xaa\xac";          // U+eaac 公文包
const std::string ICON_VS_BROADCAST = "\xee\xaa\xad";          // U+eaad 广播
const std::string ICON_VS_BROWSER = "\xee\xaa\xae";            // U+eaae 浏览器
const std::string ICON_VS_BUG = "\xee\xaa\xaf";                // U+eaaf Bug
const std::string ICON_VS_CALENDAR = "\xee\xaa\xb0";           // U+eab0 日历
const std::string ICON_VS_CASE_SENSITIVE = "\xee\xaa\xb1";     // U+eab1 区分大小写
const std::string ICON_VS_CHECK = "\xee\xaa\xb2";              // U+eab2 勾选
const std::string ICON_VS_CHECKLIST = "\xee\xaa\xb3";          // U+eab3 检查列表
const std::string ICON_VS_CHEVRON_DOWN = "\xee\xaa\xb4";       // U+eab4 下拉箭头
const std::string ICON_VS_CHEVRON_LEFT = "\xee\xaa\xb5";       // U+eab5 左箭头
const std::string ICON_VS_CHEVRON_RIGHT = "\xee\xaa\xb6";      // U+eab6 右箭头
const std::string ICON_VS_CHEVRON_UP = "\xee\xaa\xb7";         // U+eab7 上箭头
const std::string ICON_VS_CHROME_CLOSE = "\xee\xaa\xb8";       // U+eab8 Chrome关闭
const std::string ICON_VS_CHROME_MAXIMIZE = "\xee\xaa\xb9";    // U+eab9 Chrome最大化
const std::string ICON_VS_CHROME_MINIMIZE = "\xee\xaa\xba";    // U+eaba Chrome最小化
const std::string ICON_VS_CHROME_RESTORE = "\xee\xaa\xbb";     // U+eabb Chrome还原
const std::string ICON_VS_CIRCLE_OUTLINE = "\xee\xaa\xbc";     // U+eabc 圆轮廓
const std::string ICON_VS_CIRCLE = "\xee\xaa\xbc";             // U+eabc 圆
const std::string ICON_VS_DEBUG_BREAKPOINT_UNVERIFIED = "\xee\xaa\xbc"; // U+eabc 未验证断点
const std::string ICON_VS_TERMINAL_DECORATION_INCOMPLETE = "\xee\xaa\xbc"; // U+eabc 终端装饰(未完成)
const std::string ICON_VS_CIRCLE_SLASH = "\xee\xaa\xbd";       // U+eabd 圆斜杠
const std::string ICON_VS_CIRCUIT_BOARD = "\xee\xaa\xbe";      // U+eabe 电路板
const std::string ICON_VS_CLEAR_ALL = "\xee\xaa\xbf";          // U+eabf 清除全部
const std::string ICON_VS_CLIPPY = "\xee\xab\x80";             // U+eac0 剪贴板
const std::string ICON_VS_CLOSE_ALL = "\xee\xab\x81";          // U+eac1 关闭全部
const std::string ICON_VS_CLOUD_DOWNLOAD = "\xee\xab\x82";     // U+eac2 云下载
const std::string ICON_VS_CLOUD_UPLOAD = "\xee\xab\x83";       // U+eac3 云上传
const std::string ICON_VS_CODE = "\xee\xab\x84";               // U+eac4 代码
const std::string ICON_VS_COLLAPSE_ALL = "\xee\xab\x85";       // U+eac5 折叠全部
const std::string ICON_VS_COLOR_MODE = "\xee\xab\x86";         // U+eac6 颜色模式
const std::string ICON_VS_COMMENT_DISCUSSION = "\xee\xab\x87"; // U+eac7 讨论评论
const std::string ICON_VS_CREDIT_CARD = "\xee\xab\x89";        // U+eac9 信用卡
const std::string ICON_VS_DASH = "\xee\xab\x8c";               // U+eacc 破折号
const std::string ICON_VS_DASHBOARD = "\xee\xab\x8d";          // U+eacd 仪表板
const std::string ICON_VS_DATABASE = "\xee\xab\x8e";           // U+eace 数据库
const std::string ICON_VS_DEBUG_CONTINUE = "\xee\xab\x8f";     // U+eacf 调试继续
const std::string ICON_VS_DEBUG_DISCONNECT = "\xee\xab\x90";   // U+ead0 调试断开
const std::string ICON_VS_DEBUG_PAUSE = "\xee\xab\x91";        // U+ead1 调试暂停
const std::string ICON_VS_DEBUG_RESTART = "\xee\xab\x92";      // U+ead2 调试重启
const std::string ICON_VS_DEBUG_START = "\xee\xab\x93";        // U+ead3 调试开始
const std::string ICON_VS_DEBUG_STEP_INTO = "\xee\xab\x94";    // U+ead4 调试步入
const std::string ICON_VS_DEBUG_STEP_OUT = "\xee\xab\x95";     // U+ead5 调试步出
const std::string ICON_VS_DEBUG_STEP_OVER = "\xee\xab\x96";    // U+ead6 调试步过
const std::string ICON_VS_DEBUG_STOP = "\xee\xab\x97";         // U+ead7 调试停止
const std::string ICON_VS_DEBUG = "\xee\xab\x98";              // U+ead8 调试
const std::string ICON_VS_DEVICE_CAMERA_VIDEO = "\xee\xab\x99"; // U+ead9 视频摄像头
const std::string ICON_VS_DEVICE_CAMERA = "\xee\xab\x9a";      // U+eada 摄像头
const std::string ICON_VS_DEVICE_MOBILE = "\xee\xab\x9b";      // U+eadb 移动设备
const std::string ICON_VS_DIFF_ADDED = "\xee\xab\x9c";         // U+eadc 差异添加
const std::string ICON_VS_DIFF_IGNORED = "\xee\xab\x9d";       // U+eadd 差异忽略
const std::string ICON_VS_DIFF_MODIFIED = "\xee\xab\x9e";      // U+eade 差异修改
const std::string ICON_VS_DIFF_REMOVED = "\xee\xab\x9f";       // U+eadf 差异移除
const std::string ICON_VS_DIFF_RENAMED = "\xee\xab\xa0";       // U+eae0 差异重命名
const std::string ICON_VS_DIFF = "\xee\xab\xa1";               // U+eae1 差异
const std::string ICON_VS_DIFF_SIDEBYSIDE = "\xee\xab\xa1";    // U+eae1 并排差异
const std::string ICON_VS_DISCARD = "\xee\xab\xa2";            // U+eae2 丢弃
const std::string ICON_VS_EDITOR_LAYOUT = "\xee\xab\xa3";      // U+eae3 编辑器布局
const std::string ICON_VS_EMPTY_WINDOW = "\xee\xab\xa4";       // U+eae4 空窗口
const std::string ICON_VS_EXCLUDE = "\xee\xab\xa5";            // U+eae5 排除
const std::string ICON_VS_EXTENSIONS = "\xee\xab\xa6";         // U+eae6 扩展
const std::string ICON_VS_EYE_CLOSED = "\xee\xab\xa7";         // U+eae7 闭眼
const std::string ICON_VS_FILE_BINARY = "\xee\xab\xa8";        // U+eae8 二进制文件
const std::string ICON_VS_FILE_CODE = "\xee\xab\xa9";          // U+eae9 代码文件
const std::string ICON_VS_FILE_MEDIA = "\xee\xab\xaa";         // U+eaea 媒体文件
const std::string ICON_VS_FILE_PDF = "\xee\xab\xab";           // U+eaeb PDF文件
const std::string ICON_VS_FILE_SUBMODULE = "\xee\xab\xac";     // U+eaec 子模块文件
const std::string ICON_VS_FILE_SYMLINK_DIRECTORY = "\xee\xab\xad"; // U+eaed 符号链接目录
const std::string ICON_VS_FILE_SYMLINK_FILE = "\xee\xab\xae";  // U+eaee 符号链接文件
const std::string ICON_VS_FILE_ZIP = "\xee\xab\xaf";           // U+eaef ZIP文件
const std::string ICON_VS_FILES = "\xee\xab\xb0";              // U+eaf0 文件
const std::string ICON_VS_FILTER = "\xee\xab\xb1";             // U+eaf1 过滤器
const std::string ICON_VS_FLAME = "\xee\xab\xb2";              // U+eaf2 火焰
const std::string ICON_VS_FOLD_DOWN = "\xee\xab\xb3";          // U+eaf3 向下折叠
const std::string ICON_VS_FOLD_UP = "\xee\xab\xb4";            // U+eaf4 向上折叠
const std::string ICON_VS_FOLD = "\xee\xab\xb5";               // U+eaf5 折叠
const std::string ICON_VS_FOLDER_ACTIVE = "\xee\xab\xb6";      // U+eaf6 活动文件夹
const std::string ICON_VS_FOLDER_OPENED = "\xee\xab\xb7";      // U+eaf7 打开文件夹
const std::string ICON_VS_GEAR = "\xee\xab\xb8";               // U+eaf8 齿轮(设置)
const std::string ICON_VS_GIFT = "\xee\xab\xb9";               // U+eaf9 礼物
const std::string ICON_VS_GIST_SECRET = "\xee\xab\xba";        // U+eafa 秘密Gist
const std::string ICON_VS_GIST = "\xee\xab\xbb";               // U+eafb Gist
const std::string ICON_VS_GIT_COMMIT = "\xee\xab\xbc";         // U+eafc Git提交
const std::string ICON_VS_GIT_COMPARE = "\xee\xab\xbd";        // U+eafd Git比较
const std::string ICON_VS_COMPARE_CHANGES = "\xee\xab\xbd";    // U+eafd 比较更改
const std::string ICON_VS_GIT_MERGE = "\xee\xab\xbe";          // U+eafe Git合并
const std::string ICON_VS_GITHUB_ACTION = "\xee\xab\xbf";      // U+eaff GitHub操作
const std::string ICON_VS_GITHUB_ALT = "\xee\xac\x80";         // U+eb00 GitHub替代
const std::string ICON_VS_GLOBE = "\xee\xac\x81";              // U+eb01 地球
const std::string ICON_VS_GRABBER = "\xee\xac\x82";            // U+eb02 抓取器
const std::string ICON_VS_GRAPH = "\xee\xac\x83";              // U+eb03 图表
const std::string ICON_VS_GRIPPER = "\xee\xac\x84";            // U+eb04 抓手
const std::string ICON_VS_HEART = "\xee\xac\x85";              // U+eb05 心
const std::string ICON_VS_HOME = "\xee\xac\x86";               // U+eb06 首页
const std::string ICON_VS_HORIZONTAL_RULE = "\xee\xac\x87";    // U+eb07 水平线
const std::string ICON_VS_HUBOT = "\xee\xac\x88";              // U+eb08 Hubot
const std::string ICON_VS_INBOX = "\xee\xac\x89";              // U+eb09 收件箱
const std::string ICON_VS_ISSUE_REOPENED = "\xee\xac\x8b";     // U+eb0b 重新打开问题
const std::string ICON_VS_ISSUES = "\xee\xac\x8c";             // U+eb0c 问题
const std::string ICON_VS_ITALIC = "\xee\xac\x8d";             // U+eb0d 斜体
const std::string ICON_VS_JERSEY = "\xee\xac\x8e";             // U+eb0e 球衣
const std::string ICON_VS_JSON = "\xee\xac\x8f";               // U+eb0f JSON
const std::string ICON_VS_KEBAB_VERTICAL = "\xee\xac\x90";     // U+eb10 垂直菜单
const std::string ICON_VS_KEY = "\xee\xac\x91";                // U+eb11 钥匙
const std::string ICON_VS_LAW = "\xee\xac\x92";                // U+eb12 法律
const std::string ICON_VS_LIGHTBULB_AUTOFIX = "\xee\xac\x93";  // U+eb13 自动修复灯泡
const std::string ICON_VS_LINK_EXTERNAL = "\xee\xac\x94";      // U+eb14 外部链接
const std::string ICON_VS_LINK = "\xee\xac\x95";               // U+eb15 链接
const std::string ICON_VS_LIST_ORDERED = "\xee\xac\x96";       // U+eb16 有序列表
const std::string ICON_VS_LIST_UNORDERED = "\xee\xac\x97";     // U+eb17 无序列表
const std::string ICON_VS_LIVE_SHARE = "\xee\xac\x98";         // U+eb18 实时共享
const std::string ICON_VS_LOADING = "\xee\xac\x99";            // U+eb19 加载
const std::string ICON_VS_LOCATION = "\xee\xac\x9a";           // U+eb1a 位置
const std::string ICON_VS_MAIL_READ = "\xee\xac\x9b";          // U+eb1b 已读邮件
const std::string ICON_VS_MAIL = "\xee\xac\x9c";               // U+eb1c 邮件
const std::string ICON_VS_MARKDOWN = "\xee\xac\x9d";           // U+eb1d Markdown
const std::string ICON_VS_MEGAPHONE = "\xee\xac\x9e";          // U+eb1e 扩音器
const std::string ICON_VS_MENTION = "\xee\xac\x9f";            // U+eb1f 提及
const std::string ICON_VS_MILESTONE = "\xee\xac\xa0";          // U+eb20 里程碑
const std::string ICON_VS_GIT_PULL_REQUEST_MILESTONE = "\xee\xac\xa0"; // U+eb20 PR里程碑
const std::string ICON_VS_MORTAR_BOARD = "\xee\xac\xa1";       // U+eb21 学位帽
const std::string ICON_VS_MOVE = "\xee\xac\xa2";               // U+eb22 移动
const std::string ICON_VS_MULTIPLE_WINDOWS = "\xee\xac\xa3";   // U+eb23 多窗口
const std::string ICON_VS_MUTE = "\xee\xac\xa4";               // U+eb24 静音
const std::string ICON_VS_NO_NEWLINE = "\xee\xac\xa5";         // U+eb25 无换行
const std::string ICON_VS_NOTE = "\xee\xac\xa6";               // U+eb26 笔记
const std::string ICON_VS_OCTOFACE = "\xee\xac\xa7";           // U+eb27 章鱼脸
const std::string ICON_VS_OPEN_PREVIEW = "\xee\xac\xa8";       // U+eb28 打开预览
const std::string ICON_VS_PACKAGE = "\xee\xac\xa9";            // U+eb29 包
const std::string ICON_VS_PAINTCAN = "\xee\xac\xaa";           // U+eb2a 油漆桶
const std::string ICON_VS_PIN = "\xee\xac\xab";                // U+eb2b 固定
const std::string ICON_VS_PLAY = "\xee\xac\xac";               // U+eb2c 播放
const std::string ICON_VS_RUN = "\xee\xac\xac";                // U+eb2c 运行
const std::string ICON_VS_PLUG = "\xee\xac\xad";               // U+eb2d 插头
const std::string ICON_VS_PRESERVE_CASE = "\xee\xac\xae";      // U+eb2e 保持大小写
const std::string ICON_VS_PREVIEW = "\xee\xac\xaf";            // U+eb2f 预览
const std::string ICON_VS_PROJECT = "\xee\xac\xb0";            // U+eb30 项目
const std::string ICON_VS_PULSE = "\xee\xac\xb1";              // U+eb31 脉冲
const std::string ICON_VS_QUESTION = "\xee\xac\xb2";           // U+eb32 问题
const std::string ICON_VS_QUOTE = "\xee\xac\xb3";              // U+eb33 引用
const std::string ICON_VS_RADIO_TOWER = "\xee\xac\xb4";        // U+eb34 无线电塔
const std::string ICON_VS_REACTIONS = "\xee\xac\xb5";          // U+eb35 反应
const std::string ICON_VS_REFERENCES = "\xee\xac\xb6";         // U+eb36 引用
const std::string ICON_VS_REFRESH = "\xee\xac\xb7";            // U+eb37 刷新
const std::string ICON_VS_REGEX = "\xee\xac\xb8";              // U+eb38 正则表达式
const std::string ICON_VS_REMOTE_EXPLORER = "\xee\xac\xb9";    // U+eb39 远程资源管理器
const std::string ICON_VS_REMOTE = "\xee\xac\xba";             // U+eb3a 远程
const std::string ICON_VS_REMOVE = "\xee\xac\xbb";             // U+eb3b 移除
const std::string ICON_VS_REPLACE_ALL = "\xee\xac\xbc";        // U+eb3c 全部替换
const std::string ICON_VS_REPLACE = "\xee\xac\xbd";            // U+eb3d 替换
const std::string ICON_VS_REPO_CLONE = "\xee\xac\xbe";         // U+eb3e 克隆仓库
const std::string ICON_VS_REPO_FORCE_PUSH = "\xee\xac\xbf";    // U+eb3f 强制推送
const std::string ICON_VS_REPO_PULL = "\xee\xad\x80";          // U+eb40 拉取仓库
const std::string ICON_VS_REPO_PUSH = "\xee\xad\x81";          // U+eb41 推送仓库
const std::string ICON_VS_REPORT = "\xee\xad\x82";             // U+eb42 报告
const std::string ICON_VS_REQUEST_CHANGES = "\xee\xad\x83";    // U+eb43 请求更改
const std::string ICON_VS_ROCKET = "\xee\xad\x84";             // U+eb44 火箭
const std::string ICON_VS_ROOT_FOLDER_OPENED = "\xee\xad\x85"; // U+eb45 打开根文件夹
const std::string ICON_VS_ROOT_FOLDER = "\xee\xad\x86";        // U+eb46 根文件夹
const std::string ICON_VS_RSS = "\xee\xad\x87";                // U+eb47 RSS
const std::string ICON_VS_RUBY = "\xee\xad\x88";               // U+eb48 Ruby
const std::string ICON_VS_SAVE_ALL = "\xee\xad\x89";           // U+eb49 全部保存
const std::string ICON_VS_SAVE_AS = "\xee\xad\x8a";            // U+eb4a 另存为
const std::string ICON_VS_SAVE = "\xee\xad\x8b";               // U+eb4b 保存
const std::string ICON_VS_SCREEN_FULL = "\xee\xad\x8c";        // U+eb4c 全屏
const std::string ICON_VS_SCREEN_NORMAL = "\xee\xad\x8d";      // U+eb4d 正常屏幕
const std::string ICON_VS_SEARCH_STOP = "\xee\xad\x8e";        // U+eb4e 停止搜索
const std::string ICON_VS_SERVER = "\xee\xad\x90";             // U+eb50 服务器
const std::string ICON_VS_SETTINGS_GEAR = "\xee\xad\x91";      // U+eb51 设置齿轮
const std::string ICON_VS_SETTINGS = "\xee\xad\x92";           // U+eb52 设置
const std::string ICON_VS_SHIELD = "\xee\xad\x93";             // U+eb53 盾牌
const std::string ICON_VS_SMILEY = "\xee\xad\x94";             // U+eb54 笑脸
const std::string ICON_VS_SORT_PRECEDENCE = "\xee\xad\x95";    // U+eb55 排序优先级
const std::string ICON_VS_SPLIT_HORIZONTAL = "\xee\xad\x96";   // U+eb56 水平分割
const std::string ICON_VS_SPLIT_VERTICAL = "\xee\xad\x97";     // U+eb57 垂直分割
const std::string ICON_VS_SQUIRREL = "\xee\xad\x98";           // U+eb58 松鼠
const std::string ICON_VS_STAR_FULL = "\xee\xad\x99";          // U+eb59 实心星
const std::string ICON_VS_STAR_HALF = "\xee\xad\x9a";          // U+eb5a 半星
const std::string ICON_VS_SYMBOL_CLASS = "\xee\xad\x9b";       // U+eb5b 类符号
const std::string ICON_VS_SYMBOL_COLOR = "\xee\xad\x9c";       // U+eb5c 颜色符号
const std::string ICON_VS_SYMBOL_CONSTANT = "\xee\xad\x9d";    // U+eb5d 常量符号
const std::string ICON_VS_SYMBOL_ENUM_MEMBER = "\xee\xad\x9e"; // U+eb5e 枚举成员符号
const std::string ICON_VS_SYMBOL_FIELD = "\xee\xad\x9f";       // U+eb5f 字段符号
const std::string ICON_VS_SYMBOL_FILE = "\xee\xad\xa0";        // U+eb60 文件符号
const std::string ICON_VS_SYMBOL_INTERFACE = "\xee\xad\xa1";   // U+eb61 接口符号
const std::string ICON_VS_SYMBOL_KEYWORD = "\xee\xad\xa2";     // U+eb62 关键字符号
const std::string ICON_VS_SYMBOL_MISC = "\xee\xad\xa3";        // U+eb63 杂项符号
const std::string ICON_VS_SYMBOL_OPERATOR = "\xee\xad\xa4";    // U+eb64 操作符符号
const std::string ICON_VS_SYMBOL_PROPERTY = "\xee\xad\xa5";    // U+eb65 属性符号
const std::string ICON_VS_WRENCH = "\xee\xad\xa5";             // U+eb65 扳手
const std::string ICON_VS_WRENCH_SUBACTION = "\xee\xad\xa5";   // U+eb65 扳手子操作
const std::string ICON_VS_SYMBOL_SNIPPET = "\xee\xad\xa6";     // U+eb66 片段符号
const std::string ICON_VS_TASKLIST = "\xee\xad\xa7";           // U+eb67 任务列表
const std::string ICON_VS_TELESCOPE = "\xee\xad\xa8";          // U+eb68 望远镜
const std::string ICON_VS_TEXT_SIZE = "\xee\xad\xa9";          // U+eb69 文本大小
const std::string ICON_VS_THREE_BARS = "\xee\xad\xaa";         // U+eb6a 三横线
const std::string ICON_VS_THUMBSDOWN = "\xee\xad\xab";         // U+eb6b 拇指向下
const std::string ICON_VS_THUMBSUP = "\xee\xad\xac";           // U+eb6c 拇指向上
const std::string ICON_VS_TOOLS = "\xee\xad\xad";              // U+eb6d 工具
const std::string ICON_VS_TRIANGLE_DOWN = "\xee\xad\xae";      // U+eb6e 向下三角
const std::string ICON_VS_TRIANGLE_LEFT = "\xee\xad\xaf";      // U+eb6f 向左三角
const std::string ICON_VS_TRIANGLE_RIGHT = "\xee\xad\xb0";     // U+eb70 向右三角
const std::string ICON_VS_TRIANGLE_UP = "\xee\xad\xb1";        // U+eb71 向上三角
const std::string ICON_VS_TWITTER = "\xee\xad\xb2";            // U+eb72 Twitter
const std::string ICON_VS_UNFOLD = "\xee\xad\xb3";             // U+eb73 展开
const std::string ICON_VS_UNLOCK = "\xee\xad\xb4";             // U+eb74 解锁
const std::string ICON_VS_UNMUTE = "\xee\xad\xb5";             // U+eb75 取消静音
const std::string ICON_VS_UNVERIFIED = "\xee\xad\xb6";         // U+eb76 未验证
const std::string ICON_VS_VERIFIED = "\xee\xad\xb7";           // U+eb77 已验证
const std::string ICON_VS_VERSIONS = "\xee\xad\xb8";           // U+eb78 版本
const std::string ICON_VS_VM_ACTIVE = "\xee\xad\xb9";          // U+eb79 活动虚拟机
const std::string ICON_VS_VM_OUTLINE = "\xee\xad\xba";         // U+eb7a 虚拟机轮廓
const std::string ICON_VS_VM_RUNNING = "\xee\xad\xbb";         // U+eb7b 运行虚拟机
const std::string ICON_VS_WATCH = "\xee\xad\xbc";              // U+eb7c 手表
const std::string ICON_VS_WHITESPACE = "\xee\xad\xbd";         // U+eb7d 空白
const std::string ICON_VS_WHOLE_WORD = "\xee\xad\xbe";         // U+eb7e 整词
const std::string ICON_VS_WINDOW = "\xee\xad\xbf";             // U+eb7f 窗口
const std::string ICON_VS_WORD_WRAP = "\xee\xae\x80";          // U+eb80 自动换行
const std::string ICON_VS_ZOOM_IN = "\xee\xae\x81";            // U+eb81 放大
const std::string ICON_VS_ZOOM_OUT = "\xee\xae\x82";           // U+eb82 缩小
const std::string ICON_VS_LIST_FILTER = "\xee\xae\x83";        // U+eb83 列表过滤
const std::string ICON_VS_LIST_FLAT = "\xee\xae\x84";          // U+eb84 平面列表
const std::string ICON_VS_LIST_SELECTION = "\xee\xae\x85";     // U+eb85 列表选择
const std::string ICON_VS_SELECTION = "\xee\xae\x85";          // U+eb85 选择
const std::string ICON_VS_LIST_TREE = "\xee\xae\x86";          // U+eb86 树列表
const std::string ICON_VS_DEBUG_BREAKPOINT_FUNCTION_UNVERIFIED = "\xee\xae\x87"; // U+eb87 未验证函数断点
const std::string ICON_VS_DEBUG_BREAKPOINT_FUNCTION = "\xee\xae\x88"; // U+eb88 函数断点
const std::string ICON_VS_DEBUG_BREAKPOINT_FUNCTION_DISABLED = "\xee\xae\x88"; // U+eb88 禁用函数断点
const std::string ICON_VS_DEBUG_STACKFRAME_ACTIVE = "\xee\xae\x89"; // U+eb89 活动堆栈帧
const std::string ICON_VS_CIRCLE_SMALL_FILLED = "\xee\xae\x8a"; // U+eb8a 小填充圆
const std::string ICON_VS_DEBUG_STACKFRAME_DOT = "\xee\xae\x8a"; // U+eb8a 堆栈帧点
const std::string ICON_VS_TERMINAL_DECORATION_MARK = "\xee\xae\x8a"; // U+eb8a 终端装饰标记
const std::string ICON_VS_DEBUG_STACKFRAME = "\xee\xae\x8b";   // U+eb8b 堆栈帧
const std::string ICON_VS_DEBUG_STACKFRAME_FOCUSED = "\xee\xae\x8b"; // U+eb8b 聚焦堆栈帧
const std::string ICON_VS_DEBUG_BREAKPOINT_UNSUPPORTED = "\xee\xae\x8c"; // U+eb8c 不支持的断点
const std::string ICON_VS_SYMBOL_STRING = "\xee\xae\x8d";      // U+eb8d 字符串符号
const std::string ICON_VS_DEBUG_REVERSE_CONTINUE = "\xee\xae\x8e"; // U+eb8e 反向继续调试
const std::string ICON_VS_DEBUG_STEP_BACK = "\xee\xae\x8f";    // U+eb8f 调试步回
const std::string ICON_VS_DEBUG_RESTART_FRAME = "\xee\xae\x90"; // U+eb90 重启调试帧
const std::string ICON_VS_DEBUG_ALT = "\xee\xae\x91";          // U+eb91 替代调试
const std::string ICON_VS_CALL_INCOMING = "\xee\xae\x92";      // U+eb92 呼入
const std::string ICON_VS_CALL_OUTGOING = "\xee\xae\x93";      // U+eb93 呼出
const std::string ICON_VS_MENU = "\xee\xae\x94";               // U+eb94 菜单
const std::string ICON_VS_EXPAND_ALL = "\xee\xae\x95";         // U+eb95 展开全部
const std::string ICON_VS_FEEDBACK = "\xee\xae\x96";           // U+eb96 反馈
const std::string ICON_VS_GIT_PULL_REQUEST_REVIEWER = "\xee\xae\x96"; // U+eb96 PR审查者
const std::string ICON_VS_GROUP_BY_REF_TYPE = "\xee\xae\x97";  // U+eb97 按引用类型分组
const std::string ICON_VS_UNGROUP_BY_REF_TYPE = "\xee\xae\x98"; // U+eb98 按引用类型取消分组
const std::string ICON_VS_ACCOUNT = "\xee\xae\x99";            // U+eb99 账户
const std::string ICON_VS_GIT_PULL_REQUEST_ASSIGNEE = "\xee\xae\x99"; // U+eb99 PR被指派者
const std::string ICON_VS_BELL_DOT = "\xee\xae\x9a";           // U+eb9a 带点铃铛
const std::string ICON_VS_DEBUG_CONSOLE = "\xee\xae\x9b";      // U+eb9b 调试控制台
const std::string ICON_VS_LIBRARY = "\xee\xae\x9c";            // U+eb9c 库
const std::string ICON_VS_OUTPUT = "\xee\xae\x9d";             // U+eb9d 输出
const std::string ICON_VS_RUN_ALL = "\xee\xae\x9e";            // U+eb9e 全部运行
const std::string ICON_VS_SYNC_IGNORED = "\xee\xae\x9f";       // U+eb9f 忽略同步
const std::string ICON_VS_PINNED = "\xee\xae\xa0";             // U+eba0 固定
const std::string ICON_VS_GITHUB_INVERTED = "\xee\xae\xa1";    // U+eba1 GitHub反色
const std::string ICON_VS_SERVER_PROCESS = "\xee\xae\xa2";     // U+eba2 服务器进程
const std::string ICON_VS_SERVER_ENVIRONMENT = "\xee\xae\xa3"; // U+eba3 服务器环境
const std::string ICON_VS_PASS = "\xee\xae\xa4";               // U+eba4 通过
const std::string ICON_VS_ISSUE_CLOSED = "\xee\xae\xa4";       // U+eba4 关闭问题
const std::string ICON_VS_STOP_CIRCLE = "\xee\xae\xa5";        // U+eba5 停止圆
const std::string ICON_VS_PLAY_CIRCLE = "\xee\xae\xa6";        // U+eba6 播放圆
const std::string ICON_VS_RECORD = "\xee\xae\xa7";             // U+eba7 记录
const std::string ICON_VS_DEBUG_ALT_SMALL = "\xee\xae\xa8";    // U+eba8 小替代调试
const std::string ICON_VS_VM_CONNECT = "\xee\xae\xa9";         // U+eba9 连接虚拟机
const std::string ICON_VS_CLOUD = "\xee\xae\xaa";              // U+ebaa 云
const std::string ICON_VS_MERGE = "\xee\xae\xab";              // U+ebab 合并
const std::string ICON_VS_EXPORT = "\xee\xae\xac";             // U+ebac 导出
const std::string ICON_VS_GRAPH_LEFT = "\xee\xae\xad";         // U+ebad 左图表
const std::string ICON_VS_MAGNET = "\xee\xae\xae";             // U+ebae 磁铁
const std::string ICON_VS_NOTEBOOK = "\xee\xae\xaf";           // U+ebaf 笔记本
const std::string ICON_VS_REDO = "\xee\xae\xb0";               // U+ebb0 重做
const std::string ICON_VS_CHECK_ALL = "\xee\xae\xb1";          // U+ebb1 全选
const std::string ICON_VS_PINNED_DIRTY = "\xee\xae\xb2";       // U+ebb2 脏固定
const std::string ICON_VS_PASS_FILLED = "\xee\xae\xb3";        // U+ebb3 填充通过
const std::string ICON_VS_CIRCLE_LARGE_FILLED = "\xee\xae\xb4"; // U+ebb4 大填充圆
const std::string ICON_VS_CIRCLE_LARGE = "\xee\xae\xb5";       // U+ebb5 大圆
const std::string ICON_VS_CIRCLE_LARGE_OUTLINE = "\xee\xae\xb5"; // U+ebb5 大圆轮廓
const std::string ICON_VS_COMBINE = "\xee\xae\xb6";            // U+ebb6 合并
const std::string ICON_VS_GATHER = "\xee\xae\xb6";             // U+ebb6 收集
const std::string ICON_VS_TABLE = "\xee\xae\xb7";              // U+ebb7 表格
const std::string ICON_VS_VARIABLE_GROUP = "\xee\xae\xb8";     // U+ebb8 变量组
const std::string ICON_VS_TYPE_HIERARCHY = "\xee\xae\xb9";     // U+ebb9 类型层次
const std::string ICON_VS_TYPE_HIERARCHY_SUB = "\xee\xae\xba"; // U+ebba 子类型层次
const std::string ICON_VS_TYPE_HIERARCHY_SUPER = "\xee\xae\xbb"; // U+ebbb 父类型层次
const std::string ICON_VS_GIT_PULL_REQUEST_CREATE = "\xee\xae\xbc"; // U+ebbc 创建PR
const std::string ICON_VS_RUN_ABOVE = "\xee\xae\xbd";          // U+ebbd 运行上方
const std::string ICON_VS_RUN_BELOW = "\xee\xae\xbe";          // U+ebbe 运行下方
const std::string ICON_VS_NOTEBOOK_TEMPLATE = "\xee\xae\xbf";  // U+ebbf 笔记本模板
const std::string ICON_VS_DEBUG_RERUN = "\xee\xaf\x80";        // U+ebc0 重新运行调试
const std::string ICON_VS_WORKSPACE_TRUSTED = "\xee\xaf\x81";  // U+ebc1 受信任工作区
const std::string ICON_VS_WORKSPACE_UNTRUSTED = "\xee\xaf\x82"; // U+ebc2 不受信任工作区
const std::string ICON_VS_WORKSPACE_UNKNOWN = "\xee\xaf\x83";  // U+ebc3 未知工作区
const std::string ICON_VS_TERMINAL_CMD = "\xee\xaf\x84";       // U+ebc4 终端CMD
const std::string ICON_VS_TERMINAL_DEBIAN = "\xee\xaf\x85";    // U+ebc5 终端Debian
const std::string ICON_VS_TERMINAL_LINUX = "\xee\xaf\x86";     // U+ebc6 终端Linux
const std::string ICON_VS_TERMINAL_POWERSHELL = "\xee\xaf\x87"; // U+ebc7 终端PowerShell
const std::string ICON_VS_TERMINAL_TMUX = "\xee\xaf\x88";      // U+ebc8 终端Tmux
const std::string ICON_VS_TERMINAL_UBUNTU = "\xee\xaf\x89";    // U+ebc9 终端Ubuntu
const std::string ICON_VS_TERMINAL_BASH = "\xee\xaf\x8a";      // U+ebca 终端Bash
const std::string ICON_VS_ARROW_SWAP = "\xee\xaf\x8b";         // U+ebcb 箭头交换
const std::string ICON_VS_COPY = "\xee\xaf\x8c";               // U+ebcc 复制
const std::string ICON_VS_PERSON_ADD = "\xee\xaf\x8d";         // U+ebcd 添加人员
const std::string ICON_VS_FILTER_FILLED = "\xee\xaf\x8e";      // U+ebce 填充过滤器
const std::string ICON_VS_WAND = "\xee\xaf\x8f";               // U+ebcf 魔棒
const std::string ICON_VS_DEBUG_LINE_BY_LINE = "\xee\xaf\x90"; // U+ebd0 逐行调试
const std::string ICON_VS_INSPECT = "\xee\xaf\x91";            // U+ebd1 检查
const std::string ICON_VS_LAYERS = "\xee\xaf\x92";             // U+ebd2 图层
const std::string ICON_VS_LAYERS_DOT = "\xee\xaf\x93";         // U+ebd3 图层点
const std::string ICON_VS_LAYERS_ACTIVE = "\xee\xaf\x94";      // U+ebd4 活动图层
const std::string ICON_VS_COMPASS = "\xee\xaf\x95";            // U+ebd5 指南针
const std::string ICON_VS_COMPASS_DOT = "\xee\xaf\x96";        // U+ebd6 指南针点
const std::string ICON_VS_COMPASS_ACTIVE = "\xee\xaf\x97";     // U+ebd7 活动指南针
const std::string ICON_VS_AZURE = "\xee\xaf\x98";              // U+ebd8 Azure
const std::string ICON_VS_ISSUE_DRAFT = "\xee\xaf\x99";        // U+ebd9 草稿问题
const std::string ICON_VS_GIT_PULL_REQUEST_CLOSED = "\xee\xaf\x9a"; // U+ebda 关闭的PR
const std::string ICON_VS_GIT_PULL_REQUEST_DRAFT = "\xee\xaf\x9b"; // U+ebdb 草稿PR
const std::string ICON_VS_DEBUG_ALL = "\xee\xaf\x9c";          // U+ebdc 全部调试
const std::string ICON_VS_DEBUG_COVERAGE = "\xee\xaf\x9d";     // U+ebdd 调试覆盖率
const std::string ICON_VS_RUN_ERRORS = "\xee\xaf\x9e";         // U+ebde 运行错误
const std::string ICON_VS_FOLDER_LIBRARY = "\xee\xaf\x9f";     // U+ebdf 文件夹库
const std::string ICON_VS_DEBUG_CONTINUE_SMALL = "\xee\xaf\xa0"; // U+ebe0 小继续调试
const std::string ICON_VS_BEAKER_STOP = "\xee\xaf\xa1";        // U+ebe1 停止烧杯
const std::string ICON_VS_GRAPH_LINE = "\xee\xaf\xa2";         // U+ebe2 线图
const std::string ICON_VS_GRAPH_SCATTER = "\xee\xaf\xa3";      // U+ebe3 散点图
const std::string ICON_VS_PIE_CHART = "\xee\xaf\xa4";          // U+ebe4 饼图
const std::string ICON_VS_BRACKET = "\xee\xac\x8f";            // U+eb0f 括号
const std::string ICON_VS_BRACKET_DOT = "\xee\xaf\xa5";        // U+ebe5 点括号
const std::string ICON_VS_BRACKET_ERROR = "\xee\xaf\xa6";      // U+ebe6 错误括号
const std::string ICON_VS_LOCK_SMALL = "\xee\xaf\xa7";         // U+ebe7 小锁
const std::string ICON_VS_AZURE_DEVOPS = "\xee\xaf\xa8";       // U+ebe8 Azure DevOps
const std::string ICON_VS_VERIFIED_FILLED = "\xee\xaf\xa9";    // U+ebe9 填充验证
const std::string ICON_VS_NEWLINE = "\xee\xaf\xaa";            // U+ebea 换行
const std::string ICON_VS_LAYOUT = "\xee\xaf\xab";             // U+ebeb 布局
const std::string ICON_VS_LAYOUT_ACTIVITYBAR_LEFT = "\xee\xaf\xac"; // U+ebec 左活动栏布局
const std::string ICON_VS_LAYOUT_ACTIVITYBAR_RIGHT = "\xee\xaf\xad"; // U+ebed 右活动栏布局
const std::string ICON_VS_LAYOUT_PANEL_LEFT = "\xee\xaf\xae";  // U+ebee 左面板布局
const std::string ICON_VS_LAYOUT_PANEL_CENTER = "\xee\xaf\xaf"; // U+ebef 中面板布局
const std::string ICON_VS_LAYOUT_PANEL_JUSTIFY = "\xee\xaf\xb0"; // U+ebf0 居中面板布局
const std::string ICON_VS_LAYOUT_PANEL_RIGHT = "\xee\xaf\xb1"; // U+ebf1 右面板布局
const std::string ICON_VS_LAYOUT_PANEL = "\xee\xaf\xb2";       // U+ebf2 面板布局
const std::string ICON_VS_LAYOUT_SIDEBAR_LEFT = "\xee\xaf\xb3"; // U+ebf3 左侧边栏布局
const std::string ICON_VS_LAYOUT_SIDEBAR_RIGHT = "\xee\xaf\xb4"; // U+ebf4 右侧边栏布局
const std::string ICON_VS_LAYOUT_STATUSBAR = "\xee\xaf\xb5";   // U+ebf5 状态栏布局
const std::string ICON_VS_LAYOUT_MENUBAR = "\xee\xaf\xb6";     // U+ebf6 菜单栏布局
const std::string ICON_VS_LAYOUT_CENTERED = "\xee\xaf\xb7";    // U+ebf7 居中布局
const std::string ICON_VS_TARGET = "\xee\xaf\xb8";             // U+ebf8 目标
const std::string ICON_VS_INDENT = "\xee\xaf\xb9";             // U+ebf9 缩进
const std::string ICON_VS_RECORD_SMALL = "\xee\xaf\xba";       // U+ebfa 小记录
const std::string ICON_VS_ERROR_SMALL = "\xee\xaf\xbb";        // U+ebfb 小错误
const std::string ICON_VS_TERMINAL_DECORATION_ERROR = "\xee\xaf\xbb"; // U+ebfb 终端装饰错误
const std::string ICON_VS_ARROW_CIRCLE_DOWN = "\xee\xaf\xbc";  // U+ebfc 圆形向下箭头
const std::string ICON_VS_ARROW_CIRCLE_LEFT = "\xee\xaf\xbd";  // U+ebfd 圆形向左箭头
const std::string ICON_VS_ARROW_CIRCLE_RIGHT = "\xee\xaf\xbe"; // U+ebfe 圆形向右箭头
const std::string ICON_VS_ARROW_CIRCLE_UP = "\xee\xaf\xbf";    // U+ebff 圆形向上箭头
const std::string ICON_VS_LAYOUT_SIDEBAR_RIGHT_OFF = "\xee\xb0\x80"; // U+ec00 关闭右侧边栏布局
const std::string ICON_VS_LAYOUT_PANEL_OFF = "\xee\xb0\x81";   // U+ec01 关闭面板布局
const std::string ICON_VS_LAYOUT_SIDEBAR_LEFT_OFF = "\xee\xb0\x82"; // U+ec02 关闭左侧边栏布局
const std::string ICON_VS_BLANK = "\xee\xb0\x83";              // U+ec03 空白
const std::string ICON_VS_HEART_FILLED = "\xee\xb0\x84";       // U+ec04 填充心
const std::string ICON_VS_MAP = "\xee\xb0\x85";                // U+ec05 地图
const std::string ICON_VS_MAP_FILLED = "\xee\xb0\x86";         // U+ec06 填充地图
const std::string ICON_VS_CIRCLE_SMALL = "\xee\xb0\x87";       // U+ec07 小圆
const std::string ICON_VS_BELL_SLASH = "\xee\xb0\x88";         // U+ec08 斜杠铃铛
const std::string ICON_VS_BELL_SLASH_DOT = "\xee\xb0\x89";     // U+ec09 带点斜杠铃铛
const std::string ICON_VS_COMMENT_UNRESOLVED = "\xee\xb0\x8a"; // U+ec0a 未解决评论
const std::string ICON_VS_GIT_PULL_REQUEST_GO_TO_CHANGES = "\xee\xb0\x8b"; // U+ec0b 转到PR更改
const std::string ICON_VS_GIT_PULL_REQUEST_NEW_CHANGES = "\xee\xb0\x8c"; // U+ec0c PR新更改
const std::string ICON_VS_SEARCH_FUZZY = "\xee\xb0\x8d";       // U+ec0d 模糊搜索
const std::string ICON_VS_COMMENT_DRAFT = "\xee\xb0\x8e";      // U+ec0e 草稿评论
const std::string ICON_VS_SEND = "\xee\xb0\x8f";               // U+ec0f 发送
const std::string ICON_VS_SPARKLE = "\xee\xb0\x90";            // U+ec10 闪光
const std::string ICON_VS_INSERT = "\xee\xb0\x91";             // U+ec11 插入
const std::string ICON_VS_MIC = "\xee\xb0\x92";                // U+ec12 麦克风
const std::string ICON_VS_THUMBSDOWN_FILLED = "\xee\xb0\x93";  // U+ec13 填充拇指向下
const std::string ICON_VS_THUMBSUP_FILLED = "\xee\xb0\x94";    // U+ec14 填充拇指向上
const std::string ICON_VS_COFFEE = "\xee\xb0\x95";             // U+ec15 咖啡
const std::string ICON_VS_SNAKE = "\xee\xb0\x96";              // U+ec16 蛇
const std::string ICON_VS_GAME = "\xee\xb0\x97";               // U+ec17 游戏
const std::string ICON_VS_VR = "\xee\xb0\x98";                 // U+ec18 VR
const std::string ICON_VS_CHIP = "\xee\xb0\x99";               // U+ec19 芯片
const std::string ICON_VS_PIANO = "\xee\xb0\x9a";              // U+ec1a 钢琴
const std::string ICON_VS_MUSIC = "\xee\xb0\x9b";              // U+ec1b 音乐
const std::string ICON_VS_MIC_FILLED = "\xee\xb0\x9c";         // U+ec1c 填充麦克风
const std::string ICON_VS_GIT_FETCH = "\xee\xb0\x9d";          // U+ec1d Git获取
const std::string ICON_VS_COPILOT = "\xee\xb0\x9e";            // U+ec1e Copilot
const std::string ICON_VS_LIGHTBULB_SPARKLE = "\xee\xb0\x9f";  // U+ec1f 闪光灯泡
const std::string ICON_VS_ROBOT = "\xee\xb0\xa0";              // U+ec20 机器人
const std::string ICON_VS_SPARKLE_FILLED = "\xee\xb0\xa1";     // U+ec21 填充闪光
const std::string ICON_VS_DIFF_SINGLE = "\xee\xb0\xa2";        // U+ec22 单差异
const std::string ICON_VS_DIFF_MULTIPLE = "\xee\xb0\xa3";      // U+ec23 多差异
const std::string ICON_VS_SURROUND_WITH = "\xee\xb0\xa4";      // U+ec24 环绕
const std::string ICON_VS_SHARE = "\xee\xb0\xa5";              // U+ec25 分享

} // namespace Resource
} // namespace Core
} // namespace DearTs